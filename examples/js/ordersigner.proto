syntax = "proto3";

package ordersigner;

enum OrderSide {
  ASK = 0;
  BID = 1;
}

enum OrderType {
  LIMIT = 0;
  MARKET = 1;
}

service OrderSigner {
  rpc SignOrder(SignOrderRequest) returns (SignOrderResponse) {
  }

  // rpc AddAccount({uid, privkey}) returns (empty) {}
}

//
message SignOrderRequest {
  // copied from https://github.com/fluidex/orchestra/blob/3938acc11e605cb381b62467a9b9cd23abed86b7/proto/exchange/matchengine.proto#L179
  uint32 user_id = 1;
  string market = 2;
  OrderSide order_side = 3;
  OrderType order_type = 4;
  string amount = 5;      // always amount for base, even for market bid
  string price = 6;       // should be empty or zero for market order
  string quote_limit = 7; // onyl valid for market bid order
  string taker_fee = 8;
  string maker_fee = 9;
  bool post_only = 10;   // Ensures an Limit order is only subject to Maker Fees
                         // (ignored for Market orders).
  string signature = 11; // bjj signature used in FluiDex
}

message SignOrderResponse {
  string signature = 1;
}
